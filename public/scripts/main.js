"use strict";!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t():"function"==typeof define&&define.amd?define(t):t()}(void 0,function(){function e(){function e(e){return e&&e!==document&&"HTML"!==e.nodeName&&"BODY"!==e.nodeName&&"classList"in e&&"contains"in e.classList?!0:!1}function t(e){var t=e.type,n=e.tagName;return"INPUT"==n&&L[t]&&!e.readOnly?!0:"TEXTAREA"!=n||e.readOnly?e.isContentEditable?!0:!1:!0}function n(e){e.classList.contains("focus-visible")||(e.classList.add("focus-visible"),e.setAttribute("data-focus-visible-added",""))}function o(e){e.hasAttribute("data-focus-visible-added")&&(e.classList.remove("focus-visible"),e.removeAttribute("data-focus-visible-added"))}function d(t){e(document.activeElement)&&n(document.activeElement),v=!0}function i(e){v=!1}function u(o){e(o.target)&&(v||t(o.target))&&n(o.target)}function s(t){e(t.target)&&(t.target.classList.contains("focus-visible")||t.target.hasAttribute("data-focus-visible-added"))&&(f=!0,window.clearTimeout(l),l=window.setTimeout(function(){f=!1,window.clearTimeout(l)},100),o(t.target))}function c(e){"hidden"==document.visibilityState&&(f&&(v=!0),a())}function a(){document.addEventListener("mousemove",m),document.addEventListener("mousedown",m),document.addEventListener("mouseup",m),document.addEventListener("pointermove",m),document.addEventListener("pointerdown",m),document.addEventListener("pointerup",m),document.addEventListener("touchmove",m),document.addEventListener("touchstart",m),document.addEventListener("touchend",m)}function r(){document.removeEventListener("mousemove",m),document.removeEventListener("mousedown",m),document.removeEventListener("mouseup",m),document.removeEventListener("pointermove",m),document.removeEventListener("pointerdown",m),document.removeEventListener("pointerup",m),document.removeEventListener("touchmove",m),document.removeEventListener("touchstart",m),document.removeEventListener("touchend",m)}function m(e){"html"!==e.target.nodeName.toLowerCase()&&(v=!1,r())}var v=!0,f=!1,l=null,L={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0};document.addEventListener("keydown",d,!0),document.addEventListener("mousedown",i,!0),document.addEventListener("pointerdown",i,!0),document.addEventListener("touchstart",i,!0),document.addEventListener("focus",u,!0),document.addEventListener("blur",s,!0),document.addEventListener("visibilitychange",c,!0),a(),document.body.classList.add("js-focus-visible")}function t(e){function t(){n||(n=!0,e())}var n;["interactive","complete"].indexOf(document.readyState)>=0?e():(n=!1,document.addEventListener("DOMContentLoaded",t,!1),window.addEventListener("load",t,!1))}"undefined"!=typeof document&&t(e)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
